import React, { useState } from 'react';
import { Star, ThumbsUp, ThumbsDown, Camera, CheckCircle } from 'lucide-react';

import type { Review } from '../interfaces/review.interface';
import { reviews } from '../data/reviews.data';

const ProductReviewPage: React.FC = () => {
  const [selectedRating, setSelectedRating] = useState<number>(0);
  const [reviewTitle, setReviewTitle] = useState<string>('');
  const [reviewContent, setReviewContent] = useState<string>('');

  const existingReviews: Review[] = [

  ];

  const renderStars = (rating: number, interactive: boolean = false, onRate?: (rating: number) => void) => {
    return (
      <div className="flex items-center gap-1">
        {[1, 2, 3, 4, 5].map((star) => (
          <Star
            key={star}
            className={`w-5 h-5 ${
              star <= rating 
                ? 'fill-yellow-400 text-yellow-400' 
                : 'text-gray-300'
            } ${interactive ? 'cursor-pointer hover:text-yellow-400' : ''}`}
            onClick={() => interactive && onRate && onRate(star)}
          />
        ))}
      </div>
    );
  };

  const getRatingDistribution = () => {
    const distribution = [0, 0, 0, 0, 0];
    existingReviews.forEach(review => {
      distribution[review.rating - 1]++;
    });
    return distribution;
  };

  const getAverageRating = () => {
    const total = existingReviews.reduce((sum, review) => sum + review.rating, 0);
    return (total / existingReviews.length).toFixed(1);
  };

  const distribution = getRatingDistribution();
  const averageRating = parseFloat(getAverageRating());

  return (
    <div className="max-w-6xl mx-auto p-6 bg-white">
      {/* Header */}
      <div className="border-b border-gray-200 pb-6 mb-6">
        <h1 className="text-2xl font-semibold text-gray-900 mb-4">Customer Reviews</h1>
        
        {/* Rating Summary */}
        <div className="flex items-start gap-8">
          <div className="flex flex-col items-center">
            <div className="text-5xl font-light text-gray-900 mb-2">{getAverageRating()}</div>
            <div className="flex items-center mb-1">
              {renderStars(Math.round(averageRating))}
            </div>
            <div className="text-sm text-gray-600">{existingReviews.length} global ratings</div>
          </div>
          
          <div className="flex-1 max-w-md">
            {[5, 4, 3, 2, 1].map((rating) => (
              <div key={rating} className="flex items-center gap-3 mb-1">
                <span className="text-sm text-blue-600 hover:underline cursor-pointer">
                  {rating} star
                </span>
                <div className="flex-1 bg-gray-200 rounded h-4 relative overflow-hidden">
                  <div 
                    className="bg-yellow-400 h-full rounded"
                    style={{ 
                      width: `${existingReviews.length > 0 ? (distribution[rating - 1] / existingReviews.length) * 100 : 0}%` 
                    }}
                  ></div>
                </div>
                <span className="text-sm text-gray-600 w-8">
                  {Math.round(existingReviews.length > 0 ? (distribution[rating - 1] / existingReviews.length) * 100 : 0)}%
                </span>
              </div>
            ))}
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
        {/* Write a Review Section */}
        <div className="lg:col-span-1">
          <div className="bg-gray-50 rounded-lg p-6 sticky top-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">Write a customer review</h2>
            
            <div className="mb-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Overall rating
              </label>
              {renderStars(selectedRating, true, setSelectedRating)}
            </div>

            <div className="mb-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Add a headline
              </label>
              <input
                type="text"
                placeholder="What's most important to know?"
                value={reviewTitle}
                onChange={(e) => setReviewTitle(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>

            <div className="mb-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Add a written review
              </label>
              <textarea
                placeholder="What did you like or dislike? What did you use this product for?"
                value={reviewContent}
                onChange={(e) => setReviewContent(e.target.value)}
                rows={4}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none"
              />
            </div>

            <div className="mb-6">
              <button className="flex items-center gap-2 text-sm text-blue-600 hover:text-blue-800 border border-gray-300 rounded px-3 py-2 hover:bg-gray-50">
                <Camera className="w-4 h-4" />
                Add a photo or video
              </button>
            </div>

            <button className="w-full bg-yellow-400 hover:bg-yellow-500 text-gray-900 font-medium py-2 px-4 rounded-md transition-colors">
              Submit
            </button>
          </div>
        </div>

        {/* Reviews List */}
        <div className="lg:col-span-2">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-lg font-semibold text-gray-900">Top reviews</h2>
            <select className="border border-gray-300 rounded px-3 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
              <option>Top reviews</option>
              <option>Most recent</option>
              <option>Highest rated</option>
              <option>Lowest rated</option>
            </select>
          </div>

          <div className="space-y-6">
            {existingReviews.map((review) => (
              <div key={review.id} className="border-b border-gray-200 pb-6">
                <div className="flex items-start gap-3 mb-3">
                  <div className="w-10 h-10 bg-gray-300 rounded-full flex items-center justify-center text-sm font-medium text-gray-600">
                    {review.author.charAt(0)}
                  </div>
                  <div className="flex-1">
                    <div className="font-medium text-gray-900">{review.author}</div>
                    {review.verified && (
                      <div className="flex items-center gap-1 text-xs text-orange-600 mt-1">
                        <CheckCircle className="w-3 h-3" />
                        Verified Purchase
                      </div>
                    )}
                  </div>
                </div>

                <div className="mb-2">
                  <div className="flex items-center gap-2 mb-1">
                    {renderStars(review.rating)}
                    <span className="font-medium text-gray-900">{review.title}</span>
                  </div>
                  <div className="text-sm text-gray-600">Reviewed on {review.date}</div>
                </div>

                <p className="text-gray-700 mb-4 leading-relaxed">{review.content}</p>

                <div className="flex items-center gap-4">
                  <button className="flex items-center gap-1 text-sm text-gray-600 hover:text-gray-900">
                    <ThumbsUp className="w-4 h-4" />
                    Helpful ({review.helpful})
                  </button>
                  <button className="flex items-center gap-1 text-sm text-gray-600 hover:text-gray-900">
                    <ThumbsDown className="w-4 h-4" />
                    Not helpful
                  </button>
                  <button className="text-sm text-gray-600 hover:text-gray-900">
                    Report
                  </button>
                </div>
              </div>
            ))}
          </div>

          <div className="mt-8">
            <button className="text-blue-600 hover:text-blue-800 font-medium">
              See all reviews
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProductReviewPage;